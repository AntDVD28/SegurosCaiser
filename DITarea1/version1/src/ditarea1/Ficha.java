/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ditarea1;

import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.util.Calendar;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;

/**
 *
 * @author AntDVD
 */
public class Ficha extends javax.swing.JDialog {

    /**
     * Creates new form Ficha
     */
    public Ficha(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.setResizable(false);
        initComponents();
        
        //Damos el formato indicado al spinner
        Date datenow = Calendar.getInstance().getTime(); 
        SpinnerDateModel smb = new SpinnerDateModel(); 
        spFecha.setModel(smb); 
        JSpinner.DateEditor d = new JSpinner.DateEditor(spFecha, "dd/MM/yyyy"); 
        spFecha.setEditor(d);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgZona = new javax.swing.ButtonGroup();
        lbTitulo = new javax.swing.JLabel();
        jpFicha = new javax.swing.JPanel();
        lbCodigo = new javax.swing.JLabel();
        tfCodigo = new javax.swing.JTextField();
        lbNombre = new javax.swing.JLabel();
        tfNombre = new javax.swing.JTextField();
        lbApellidos = new javax.swing.JLabel();
        tfApellidos = new javax.swing.JTextField();
        lbDireccion = new javax.swing.JLabel();
        tfDireccion = new javax.swing.JTextField();
        lbTelefono = new javax.swing.JLabel();
        tfTelefono = new javax.swing.JTextField();
        lbFechaAlta = new javax.swing.JLabel();
        lbTarifa = new javax.swing.JLabel();
        tfTarifa = new javax.swing.JTextField();
        spFecha = new javax.swing.JSpinner();
        jpZona = new javax.swing.JPanel();
        rbLevante = new javax.swing.JRadioButton();
        rbCentro = new javax.swing.JRadioButton();
        rbSur = new javax.swing.JRadioButton();
        cbEstructura = new javax.swing.JCheckBox();
        cbCimentacion = new javax.swing.JCheckBox();
        cbAlbanileria = new javax.swing.JCheckBox();
        cbFontaneria = new javax.swing.JCheckBox();
        cbCarpinteria = new javax.swing.JCheckBox();
        cbDecoracion = new javax.swing.JCheckBox();
        bhSeparador = new javax.swing.JSeparator();
        btAceptar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        jbComercial = new javax.swing.JLabel();
        tfComercial = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(ditarea1.DITarea1App.class).getContext().getResourceMap(Ficha.class);
        lbTitulo.setFont(resourceMap.getFont("lbTitulo.font")); // NOI18N
        lbTitulo.setForeground(resourceMap.getColor("lbTitulo.foreground")); // NOI18N
        lbTitulo.setIcon(resourceMap.getIcon("lbTitulo.icon")); // NOI18N
        lbTitulo.setText(resourceMap.getString("lbTitulo.text")); // NOI18N
        lbTitulo.setName("lbTitulo"); // NOI18N

        jpFicha.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jpFicha.border.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, resourceMap.getFont("jpFicha.border.border.titleFont"), resourceMap.getColor("jpFicha.border.border.titleColor")))); // NOI18N
        jpFicha.setName("jpFicha"); // NOI18N

        lbCodigo.setText(resourceMap.getString("lbCodigo.text")); // NOI18N
        lbCodigo.setName("lbCodigo"); // NOI18N

        tfCodigo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfCodigo.setText(resourceMap.getString("tfCodigo.text")); // NOI18N
        tfCodigo.setToolTipText(resourceMap.getString("tfCodigo.toolTipText")); // NOI18N
        tfCodigo.setName("tfCodigo"); // NOI18N
        tfCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfCodigoKeyTyped(evt);
            }
        });

        lbNombre.setText(resourceMap.getString("lbNombre.text")); // NOI18N
        lbNombre.setName("lbNombre"); // NOI18N

        tfNombre.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfNombre.setToolTipText(resourceMap.getString("tfNombre.toolTipText")); // NOI18N
        tfNombre.setName("tfNombre"); // NOI18N
        tfNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNombreKeyTyped(evt);
            }
        });

        lbApellidos.setText(resourceMap.getString("lbApellidos.text")); // NOI18N
        lbApellidos.setName("lbApellidos"); // NOI18N

        tfApellidos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfApellidos.setToolTipText(resourceMap.getString("tfApellidos.toolTipText")); // NOI18N
        tfApellidos.setName("tfApellidos"); // NOI18N
        tfApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfApellidosKeyTyped(evt);
            }
        });

        lbDireccion.setText(resourceMap.getString("lbDireccion.text")); // NOI18N
        lbDireccion.setName("lbDireccion"); // NOI18N

        tfDireccion.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfDireccion.setToolTipText(resourceMap.getString("tfDireccion.toolTipText")); // NOI18N
        tfDireccion.setName("tfDireccion"); // NOI18N
        tfDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfDireccionKeyTyped(evt);
            }
        });

        lbTelefono.setText(resourceMap.getString("lbTelefono.text")); // NOI18N
        lbTelefono.setName("lbTelefono"); // NOI18N

        tfTelefono.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfTelefono.setToolTipText(resourceMap.getString("tfTelefono.toolTipText")); // NOI18N
        tfTelefono.setName("tfTelefono"); // NOI18N
        tfTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfTelefonoKeyTyped(evt);
            }
        });

        lbFechaAlta.setText(resourceMap.getString("lbFechaAlta.text")); // NOI18N
        lbFechaAlta.setName("lbFechaAlta"); // NOI18N

        lbTarifa.setText(resourceMap.getString("lbTarifa.text")); // NOI18N
        lbTarifa.setName("lbTarifa"); // NOI18N

        tfTarifa.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfTarifa.setToolTipText(resourceMap.getString("tfTarifa.toolTipText")); // NOI18N
        tfTarifa.setName("tfTarifa"); // NOI18N
        tfTarifa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfTarifaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfTarifaKeyTyped(evt);
            }
        });

        spFecha.setToolTipText(resourceMap.getString("spFecha.toolTipText")); // NOI18N
        spFecha.setName("spFecha"); // NOI18N

        jpZona.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jpZona.border.border.title")))); // NOI18N
        jpZona.setName("jpZona"); // NOI18N

        bgZona.add(rbLevante);
        rbLevante.setText(resourceMap.getString("rbLevante.text")); // NOI18N
        rbLevante.setToolTipText(resourceMap.getString("rbLevante.toolTipText")); // NOI18N
        rbLevante.setName("rbLevante"); // NOI18N
        rbLevante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbLevanteActionPerformed(evt);
            }
        });

        bgZona.add(rbCentro);
        rbCentro.setText(resourceMap.getString("rbCentro.text")); // NOI18N
        rbCentro.setToolTipText(resourceMap.getString("rbCentro.toolTipText")); // NOI18N
        rbCentro.setName("rbCentro"); // NOI18N
        rbCentro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCentroActionPerformed(evt);
            }
        });

        bgZona.add(rbSur);
        rbSur.setText(resourceMap.getString("rbSur.text")); // NOI18N
        rbSur.setToolTipText(resourceMap.getString("rbSur.toolTipText")); // NOI18N
        rbSur.setName("rbSur"); // NOI18N
        rbSur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSurActionPerformed(evt);
            }
        });

        cbEstructura.setText(resourceMap.getString("cbEstructura.text")); // NOI18N
        cbEstructura.setToolTipText(resourceMap.getString("cbEstructura.toolTipText")); // NOI18N
        cbEstructura.setEnabled(false);
        cbEstructura.setName("cbEstructura"); // NOI18N

        cbCimentacion.setText(resourceMap.getString("cbCimentacion.text")); // NOI18N
        cbCimentacion.setToolTipText(resourceMap.getString("cbCimentacion.toolTipText")); // NOI18N
        cbCimentacion.setEnabled(false);
        cbCimentacion.setName("cbCimentacion"); // NOI18N

        cbAlbanileria.setText(resourceMap.getString("cbAlbanileria.text")); // NOI18N
        cbAlbanileria.setToolTipText(resourceMap.getString("cbAlbanileria.toolTipText")); // NOI18N
        cbAlbanileria.setEnabled(false);
        cbAlbanileria.setName("cbAlbanileria"); // NOI18N

        cbFontaneria.setText(resourceMap.getString("cbFontaneria.text")); // NOI18N
        cbFontaneria.setToolTipText(resourceMap.getString("cbFontaneria.toolTipText")); // NOI18N
        cbFontaneria.setEnabled(false);
        cbFontaneria.setName("cbFontaneria"); // NOI18N

        cbCarpinteria.setText(resourceMap.getString("cbCarpinteria.text")); // NOI18N
        cbCarpinteria.setToolTipText(resourceMap.getString("cbCarpinteria.toolTipText")); // NOI18N
        cbCarpinteria.setEnabled(false);
        cbCarpinteria.setName("cbCarpinteria"); // NOI18N

        cbDecoracion.setText(resourceMap.getString("cbDecoracion.text")); // NOI18N
        cbDecoracion.setToolTipText(resourceMap.getString("cbDecoracion.toolTipText")); // NOI18N
        cbDecoracion.setEnabled(false);
        cbDecoracion.setName("cbDecoracion"); // NOI18N

        bhSeparador.setName("bhSeparador"); // NOI18N

        javax.swing.GroupLayout jpZonaLayout = new javax.swing.GroupLayout(jpZona);
        jpZona.setLayout(jpZonaLayout);
        jpZonaLayout.setHorizontalGroup(
            jpZonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bhSeparador)
            .addGroup(jpZonaLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jpZonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpZonaLayout.createSequentialGroup()
                        .addComponent(cbFontaneria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbCarpinteria, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpZonaLayout.createSequentialGroup()
                        .addComponent(cbEstructura)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbCimentacion, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpZonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbAlbanileria)
                    .addComponent(cbDecoracion))
                .addGap(0, 10, Short.MAX_VALUE))
            .addGroup(jpZonaLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(rbLevante)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbCentro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbSur)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jpZonaLayout.setVerticalGroup(
            jpZonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpZonaLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jpZonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbLevante)
                    .addComponent(rbCentro)
                    .addComponent(rbSur))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bhSeparador, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(jpZonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbEstructura)
                    .addComponent(cbCimentacion)
                    .addComponent(cbAlbanileria))
                .addGap(10, 10, 10)
                .addGroup(jpZonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbFontaneria)
                    .addComponent(cbCarpinteria)
                    .addComponent(cbDecoracion))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        btAceptar.setText(resourceMap.getString("btAceptar.text")); // NOI18N
        btAceptar.setName("btAceptar"); // NOI18N
        btAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAceptarActionPerformed(evt);
            }
        });

        btCancelar.setText(resourceMap.getString("btCancelar.text")); // NOI18N
        btCancelar.setName("btCancelar"); // NOI18N
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        jbComercial.setText(resourceMap.getString("jbComercial.text")); // NOI18N
        jbComercial.setName("jbComercial"); // NOI18N

        tfComercial.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfComercial.setText(resourceMap.getString("tfComercial.text")); // NOI18N
        tfComercial.setToolTipText(resourceMap.getString("tfComercial.toolTipText")); // NOI18N
        tfComercial.setName("tfComercial"); // NOI18N
        tfComercial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfComercialKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jpFichaLayout = new javax.swing.GroupLayout(jpFicha);
        jpFicha.setLayout(jpFichaLayout);
        jpFichaLayout.setHorizontalGroup(
            jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpFichaLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(btAceptar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btCancelar)
                .addGap(29, 29, 29))
            .addGroup(jpFichaLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jpZona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpFichaLayout.createSequentialGroup()
                .addGroup(jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpFichaLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lbFechaAlta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(spFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpFichaLayout.createSequentialGroup()
                        .addGroup(jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpFichaLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbCodigo)
                                    .addComponent(lbNombre)
                                    .addComponent(lbApellidos)
                                    .addComponent(lbDireccion)
                                    .addComponent(lbTelefono)
                                    .addComponent(lbTarifa)))
                            .addGroup(jpFichaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jbComercial)))
                        .addGap(18, 18, 18)
                        .addGroup(jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfComercial, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfTarifa)
                            .addComponent(tfTelefono)
                            .addComponent(tfDireccion)
                            .addComponent(tfApellidos)
                            .addComponent(tfNombre)
                            .addComponent(tfCodigo))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpFichaLayout.setVerticalGroup(
            jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFichaLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCodigo)
                    .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNombre)
                    .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbApellidos)
                    .addComponent(tfApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDireccion)
                    .addComponent(tfDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTelefono)
                    .addComponent(tfTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spFecha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbFechaAlta))
                .addGap(18, 18, 18)
                .addGroup(jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTarifa)
                    .addComponent(tfTarifa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jpZona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbComercial)
                    .addComponent(tfComercial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jpFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAceptar)
                    .addComponent(btCancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpFicha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbTitulo)
                .addGap(25, 25, 25)
                .addComponent(jpFicha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCodigoKeyTyped
        ValidarEntrada.validarCodigo(evt, tfCodigo);
    }//GEN-LAST:event_tfCodigoKeyTyped

    private void tfNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNombreKeyTyped
        ValidarEntrada.validarNombre(evt, tfNombre);
    }//GEN-LAST:event_tfNombreKeyTyped

    private void tfApellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfApellidosKeyTyped
        ValidarEntrada.validarApellidos(evt, tfApellidos);
    }//GEN-LAST:event_tfApellidosKeyTyped

    private void tfDireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDireccionKeyTyped
        ValidarEntrada.validarDireccion(evt, tfDireccion);
    }//GEN-LAST:event_tfDireccionKeyTyped

    private void tfTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTelefonoKeyTyped
        ValidarEntrada.validarTelefono(evt, tfTelefono);
    }//GEN-LAST:event_tfTelefonoKeyTyped

    private void tfTarifaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTarifaKeyTyped
        ValidarEntrada.validarTarifa(evt, tfTarifa);
    }//GEN-LAST:event_tfTarifaKeyTyped

    
    
    private void btAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAceptarActionPerformed
        
        //Comprobamos si todos los campos están rellenos
        if(compruebaRellenoCajas() && compruebaRellenoCheckboxes()) {
            
            String errores="";
            String codigo = tfCodigo.getText();
            String nombre = tfNombre.getText();
            String apellidos = tfApellidos.getText();
            String direccion = tfDireccion.getText();
            String telefono = tfTelefono.getText();
            String tarifa = tfTarifa.getText();
            String comercial = tfComercial.getText();
            
            //Aquí haríamos un control por patrones de aquellos campos que lo necesiten
            if(!codigo.matches("[0-9]{4}[A-Z]{1}")) errores+="\n-El código de cliente debe de estar formado por caracteres alfanuméricos y seguir el siguiente formato: NNNNL.";
            
                
            if(errores.isEmpty()){
                 
                JOptionPane.showMessageDialog(rootPane, "Datos guardados correctamente", "Registro completado", JOptionPane.INFORMATION_MESSAGE);
                dispose();
                limpiarCajas();
                limpiarFecha();
                limpiarRadiobuttons();
                limpiarCheckboxes();
                 
             } else {
                 JOptionPane.showMessageDialog(rootPane, errores, "Error al completar el formulario", JOptionPane.ERROR_MESSAGE);
             }

        }else {
            
            JOptionPane.showMessageDialog(rootPane, "Debe de rellenar todos los campos del formulario", "Faltan datos", JOptionPane.INFORMATION_MESSAGE);   
        }

    }//GEN-LAST:event_btAceptarActionPerformed

    private void rbLevanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbLevanteActionPerformed
        limpiarCheckboxes();
        if(rbLevante.isSelected()) {
            cbEstructura.setEnabled(true);
            cbCimentacion.setEnabled(true);
            cbAlbanileria.setEnabled(true);
            cbFontaneria.setEnabled(true);
            cbCarpinteria.setEnabled(true);
            cbDecoracion.setEnabled(true);
        }
    }//GEN-LAST:event_rbLevanteActionPerformed

    private void rbCentroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCentroActionPerformed
        limpiarCheckboxes();
        if(rbCentro.isSelected()) {
            cbAlbanileria.setEnabled(true);
            cbFontaneria.setEnabled(true);
            cbCarpinteria.setEnabled(true);
            cbDecoracion.setEnabled(true);
        }
    }//GEN-LAST:event_rbCentroActionPerformed

    private void rbSurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSurActionPerformed
        limpiarCheckboxes();
        if(rbSur.isSelected()) {
            cbAlbanileria.setEnabled(true);
            cbFontaneria.setEnabled(true);
            cbCarpinteria.setEnabled(true);        
        }
    }//GEN-LAST:event_rbSurActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        
        //Si no existen datos, reiniciamos el JDialog
        if( compruebaVacioCajas() && compruebaVacioCheckboxes() ){
            dispose();
            limpiarCajas();
            limpiarFecha();
            limpiarRadiobuttons();
            limpiarCheckboxes();            
            setVisible(true);
            
            
        }else {  //Existe algún campo relleno, debemos de preguntar al usuario
            
            int respuesta;
            respuesta = JOptionPane.showConfirmDialog(rootPane, "Existen campos rellenos, ¿desea cancelar los cambios?", "Confirmar cancelar", JOptionPane.YES_NO_OPTION);
           
            //Si la respuesta es afirmativa, reiniciamos el JDialog
            if(respuesta == JOptionPane.YES_OPTION){
                
                dispose();
                limpiarCajas();
                limpiarFecha();
                limpiarRadiobuttons();
                limpiarCheckboxes();
                setVisible(true);
  
            }
            
        }
        
    }//GEN-LAST:event_btCancelarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void tfTarifaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTarifaKeyReleased
        
        int max_tarifa = 100;
        
        int tarifa;
        
        if(tfTarifa.getText()!=null){
            
            if( tfTarifa.getText().matches("[0-9]*") ){

                tarifa=Integer.parseInt(tfTarifa.getText());

                if( tarifa > max_tarifa ){               
                    JOptionPane.showMessageDialog(rootPane, "La tarifa máxima para los clientes es de 100 €", "Tarifa del cliente", JOptionPane.INFORMATION_MESSAGE);
                    tfTarifa.setText(null);
                    tfTarifa.requestFocus();
                }
            }    
        }    
      
        
    }//GEN-LAST:event_tfTarifaKeyReleased

    private void tfComercialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfComercialKeyTyped
        ValidarEntrada.validarComercial(evt, tfComercial);
    }//GEN-LAST:event_tfComercialKeyTyped

     public void limpiarCajas(){
        tfCodigo.setText(null);
        tfNombre.setText(null);
        tfApellidos.setText(null);
        tfDireccion.setText(null);
        tfTelefono.setText(null);
        tfTarifa.setText(null);
        tfComercial.setText(null);
    }
     
     public void limpiarRadiobuttons(){
        bgZona.clearSelection();
        
    }
    
    public void limpiarCheckboxes(){
        cbEstructura.setSelected(false);
        cbCimentacion.setSelected(false);
        cbAlbanileria.setSelected(false);
        cbFontaneria.setSelected(false);
        cbCarpinteria.setSelected(false);
        cbDecoracion.setSelected(false);
        cbEstructura.setEnabled(false);
        cbCimentacion.setEnabled(false);
        cbAlbanileria.setEnabled(false);
        cbFontaneria.setEnabled(false);
        cbCarpinteria.setEnabled(false);
        cbDecoracion.setEnabled(false);
    }
    
    public void limpiarFecha(){
        Date datenow = Calendar.getInstance().getTime(); 
        SpinnerDateModel smb = new SpinnerDateModel(); 
        spFecha.setModel(smb); 
        JSpinner.DateEditor d = new JSpinner.DateEditor(spFecha, "dd/MM/yyyy"); 
        spFecha.setEditor(d);
    }
           
    /**
     * Método para comprobar si TODOS los componenetes de tipo textfield están vacios
     * @return boolean b Devuelve true si TODOS los textfield están vacios
     */
    public boolean compruebaVacioCajas(){
        
        boolean b = false;
        
        if(tfCodigo.getText().isEmpty() && tfNombre.getText().isEmpty() &&
           tfApellidos.getText().isEmpty() && tfDireccion.getText().isEmpty() &&
           tfTelefono.getText().isEmpty() && tfTarifa.getText().isEmpty() &&
           tfComercial.getText().isEmpty() ){
            
           b = true;
            
        }        
        return b;
    }
    
    /**
     * Método para comprobar que TODOS  los componentes de tipo textfield fueron completados
     * @return boolean b Devuelve true si TODOS los textfield fueron rellenados
     */
    public boolean compruebaRellenoCajas(){
        
        boolean b = false;
        
        if(!tfCodigo.getText().isEmpty() && !tfNombre.getText().isEmpty() &&
           !tfApellidos.getText().isEmpty() && !tfDireccion.getText().isEmpty() &&
           !tfTelefono.getText().isEmpty() && !tfTarifa.getText().isEmpty() &&
           !tfComercial.getText().isEmpty() ){
            
           b = true;
            
        }        
        return b;       
    }
    
    /**
     * Método para comprobar si TODOS los componentes de tipo checkbox no fueron tildados
     * @return boolean b Devuelve true si TODOS los checkbox no fuero tildados
     */
    public boolean compruebaVacioCheckboxes(){
        
        boolean b = false;
        
        if(!cbEstructura.isSelected() && !cbCimentacion.isSelected() && !cbAlbanileria.isSelected() &&
           !cbFontaneria.isSelected() && !cbCarpinteria.isSelected() && !cbDecoracion.isSelected() ) {
            
            b = true;
        }
        
        return b;
    }
      
    /**
     * Método para comprobar si ALGUNO de los checkboxes permitidos en función del radiobutton seleccionado fue tildado
     * @return boolean b Devuelve true si ALGUN checkbox permitido fue tildado
     */
    public boolean compruebaRellenoCheckboxes(){
        
        boolean b = false;
        
        
        //Si seleccionamos el radiobutton Levante, deberíamos de haber marcado algunas de las opciones permitidas
        if(rbLevante.isSelected()){
            
            if(cbEstructura.isSelected() || cbCimentacion.isSelected() || cbAlbanileria.isSelected() || 
               cbFontaneria.isSelected() || cbCarpinteria.isSelected() || cbDecoracion.isSelected()){
                
                b = true;
                
            }            
        }
        
        //Si seleccionamos el radiobutton Centro, deberíamos de haber marcado algunas de las opciones permitidas
        if(rbCentro.isSelected()){
            
            if(cbAlbanileria.isSelected() || cbFontaneria.isSelected() || cbCarpinteria.isSelected() || cbDecoracion.isSelected()){
                
                b = true;
            }
        }
        
        //Si seleccionamos el radiobutton Sur, deberíamos de haber marcado algunas de las opciones permitidas
        if(rbSur.isSelected()){
            
            if(cbAlbanileria.isSelected() || cbFontaneria.isSelected() || cbCarpinteria.isSelected()) {
                
                b = true;
            }
            
        }
        
        return b;
    }
    
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ficha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ficha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ficha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ficha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Ficha dialog = new Ficha(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
   
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgZona;
    private javax.swing.JSeparator bhSeparador;
    private javax.swing.JButton btAceptar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JCheckBox cbAlbanileria;
    private javax.swing.JCheckBox cbCarpinteria;
    private javax.swing.JCheckBox cbCimentacion;
    private javax.swing.JCheckBox cbDecoracion;
    private javax.swing.JCheckBox cbEstructura;
    private javax.swing.JCheckBox cbFontaneria;
    private javax.swing.JLabel jbComercial;
    private javax.swing.JPanel jpFicha;
    private javax.swing.JPanel jpZona;
    private javax.swing.JLabel lbApellidos;
    private javax.swing.JLabel lbCodigo;
    private javax.swing.JLabel lbDireccion;
    private javax.swing.JLabel lbFechaAlta;
    private javax.swing.JLabel lbNombre;
    private javax.swing.JLabel lbTarifa;
    private javax.swing.JLabel lbTelefono;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JRadioButton rbCentro;
    private javax.swing.JRadioButton rbLevante;
    private javax.swing.JRadioButton rbSur;
    private javax.swing.JSpinner spFecha;
    private javax.swing.JTextField tfApellidos;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfComercial;
    private javax.swing.JTextField tfDireccion;
    private javax.swing.JTextField tfNombre;
    private javax.swing.JTextField tfTarifa;
    private javax.swing.JTextField tfTelefono;
    // End of variables declaration//GEN-END:variables
}
